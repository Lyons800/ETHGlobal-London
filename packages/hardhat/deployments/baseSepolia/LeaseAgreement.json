{
  "address": "0xFE43FEdCDeb2606c17bb4E5C8861C8F728C4a49D",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "leaseId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tenantAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "leaseLength",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "LeaseCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "propertyAddress",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "leaseLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tenantAddress",
          "type": "address"
        }
      ],
      "name": "createLease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "leaseId",
          "type": "uint256"
        }
      ],
      "name": "getLeaseDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "propertyAddress",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "leaseLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tenantAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "signed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tenant",
          "type": "address"
        }
      ],
      "name": "getLeasesByTenant",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "leaseNftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "leases",
      "outputs": [
        {
          "internalType": "string",
          "name": "propertyAddress",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "leaseLength",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tenantAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "signed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setLeaseNftAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "leaseId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tenant",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "propertyAddress",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "leaseLength",
          "type": "uint256"
        }
      ],
      "name": "signLease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1c5d5da55edc4568968bd64ace40389db9b2da35771fa5df9981a37a7acd81a2",
  "receipt": {
    "to": null,
    "from": "0x729A361E43A2148D9b1aFE92e6353B22C70711EC",
    "contractAddress": "0xFE43FEdCDeb2606c17bb4E5C8861C8F728C4a49D",
    "transactionIndex": 4,
    "gasUsed": "825679",
    "logsBloom": "0x
    "blockHash": "0x71ea8d19277445f094233d3f266a4d4ea42a01adfbe060b774395d764ef7c2b7",
    "transactionHash": "0x1c5d5da55edc4568968bd64ace40389db9b2da35771fa5df9981a37a7acd81a2",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 7446333,
        "transactionHash": "0x1c5d5da55edc4568968bd64ace40389db9b2da35771fa5df9981a37a7acd81a2",
        "address": "0xFE43FEdCDeb2606c17bb4E5C8861C8F728C4a49D",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000729a361e43a2148d9b1afe92e6353b22c70711ec"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x71ea8d19277445f094233d3f266a4d4ea42a01adfbe060b774395d764ef7c2b7"
      }
    ],
    "blockNumber": 7446333,
    "cumulativeGasUsed": "1387763",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "2e7e6d30df6679d42e2a39880bec153b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"leaseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tenantAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leaseLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"LeaseCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"propertyAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"leaseLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tenantAddress\",\"type\":\"address\"}],\"name\":\"createLease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leaseId\",\"type\":\"uint256\"}],\"name\":\"getLeaseDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"propertyAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"leaseLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tenantAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"}],\"name\":\"getLeasesByTenant\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leaseNftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leases\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"propertyAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"leaseLength\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tenantAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setLeaseNftAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tenant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"propertyAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"leaseLength\",\"type\":\"uint256\"}],\"name\":\"signLease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LeaseAgreement.sol\":\"LeaseAgreement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/LeaseAgreement.sol\":{\"content\":\"// LeaseAgreement.sol\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/ILeaseToken.sol\\\"; // Make sure this path matches your project structure\\n\\ncontract LeaseAgreement is Ownable {\\n\\tstruct Lease {\\n\\t\\tstring propertyAddress;\\n\\t\\tuint256 leaseLength; // In days, months, etc.\\n\\t\\taddress tenantAddress;\\n\\t\\tbool signed;\\n\\t}\\n\\n\\tLease[] public leases;\\n\\taddress public leaseNftAddress;\\n\\n\\tfunction setLeaseNftAddress(address _address) public onlyOwner {\\n\\t\\tleaseNftAddress = _address;\\n\\t}\\n\\n\\tfunction getLeaseDetails(\\n\\t\\tuint256 leaseId\\n\\t)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\tstring memory propertyAddress,\\n\\t\\t\\tuint256 leaseLength,\\n\\t\\t\\taddress tenantAddress,\\n\\t\\t\\tbool signed\\n\\t\\t)\\n\\t{\\n\\t\\tLease memory lease = leases[leaseId];\\n\\t\\treturn (\\n\\t\\t\\tlease.propertyAddress,\\n\\t\\t\\tlease.leaseLength,\\n\\t\\t\\tlease.tenantAddress,\\n\\t\\t\\tlease.signed\\n\\t\\t);\\n\\t}\\n\\n\\tfunction signLease(\\n\\t\\tuint256 leaseId,\\n\\t\\taddress tenant,\\n\\t\\tstring memory propertyAddress,\\n\\t\\tuint256 leaseLength\\n\\t) public {\\n\\t\\trequire(leaseId < leases.length, \\\"Lease does not exist.\\\");\\n\\t\\trequire(\\n\\t\\t\\tleases[leaseId].tenantAddress == tenant,\\n\\t\\t\\t\\\"Only the designated tenant can sign this lease.\\\"\\n\\t\\t);\\n\\t\\trequire(!leases[leaseId].signed, \\\"Lease already signed.\\\");\\n\\t\\trequire(leaseNftAddress != address(0), \\\"LeaseNFT address not set.\\\");\\n\\n\\t\\tleases[leaseId].signed = true;\\n\\n\\t\\t// Here, call the LeaseNFT contract to mint the NFT\\n\\t\\tILeaseNFT(leaseNftAddress).mintLeaseNFT(\\n\\t\\t\\tleaseId,\\n\\t\\t\\ttenant,\\n\\t\\t\\tpropertyAddress,\\n\\t\\t\\tleaseLength,\\n\\t\\t\\t\\\"TokenURI\\\"\\n\\t\\t);\\n\\t}\\n\\n\\tmapping(address => uint256[]) private tenantLeases;\\n\\n\\tfunction getLeasesByTenant(\\n\\t\\taddress tenant\\n\\t) public view returns (uint256[] memory) {\\n\\t\\treturn tenantLeases[tenant];\\n\\t}\\n\\n\\tfunction createLease(\\n\\t\\tstring memory propertyAddress,\\n\\t\\tuint256 leaseLength,\\n\\t\\taddress tenantAddress\\n\\t) public {\\n\\t\\tleases.push(Lease(propertyAddress, leaseLength, tenantAddress, false));\\n\\t\\tuint256 leaseId = leases.length - 1;\\n\\t\\ttenantLeases[tenantAddress].push(leaseId); // Update the mapping for the tenant\\n\\t\\temit LeaseCreated(leaseId, tenantAddress, leaseLength, 0); // tokenId is 0 since it's minted later\\n\\t}\\n\\n\\tevent LeaseCreated(\\n\\t\\tuint256 indexed leaseId,\\n\\t\\taddress indexed tenantAddress,\\n\\t\\tuint256 leaseLength,\\n\\t\\tuint256 tokenId\\n\\t);\\n}\\n\\ninterface ILeaseNFT {\\n\\tfunction mintLeaseNFT(\\n\\t\\tuint256 leaseId,\\n\\t\\taddress tenant,\\n\\t\\tstring memory propertyAddress,\\n\\t\\tuint256 leaseLength,\\n\\t\\tstring memory tokenURI\\n\\t) external;\\n}\\n\",\"keccak256\":\"0x963d65603dd0f611b5bd8e07c3da3b3aac68c994aa6b51c4d6aa0fa6e1788a56\"},\"contracts/interfaces/ILeaseToken.sol\":{\"content\":\"// ILeaseToken.sol\\n\\npragma solidity ^0.8.0;\\n\\ninterface ILeaseAgreement {\\n\\tfunction signLease(uint256 leaseId, address tenant) external;\\n\\tfunction getLeaseDetails(\\n\\t\\tuint256 leaseId\\n\\t)\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\tstring memory propertyAddress,\\n\\t\\t\\tuint256 leaseLength,\\n\\t\\t\\taddress tenantAddress,\\n\\t\\t\\tbool signed\\n\\t\\t);\\n}\\n\",\"keccak256\":\"0x9617ca09ad5971908f26dd3e4cb7bd80d052c20cb4fd564a8f9738470e306b37\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d848061007e6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012a5780639ee1030c1461013b578063d3ea8ae41461014e578063d5f0cdcf1461016e578063f2fde38b1461018157600080fd5b80632e8331fa146100a35780636afd883d146100cf5780636fc28d68146100e4578063715018a61461010f5780638927a10614610117575b600080fd5b6100b66100b13660046108f9565b610194565b6040516100c69493929190610958565b60405180910390f35b6100e26100dd3660046109ae565b6102b2565b005b6002546100f7906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100e26102dc565b6100b66101253660046108f9565b6102f0565b6000546001600160a01b03166100f7565b6100e2610149366004610a73565b6103c7565b61016161015c3660046109ae565b6104ff565b6040516100c69190610aca565b6100e261017c366004610b0e565b61056b565b6100e261018f3660046109ae565b6107d6565b6060600080600080600186815481106101af576101af610b6d565b90600052602060002090600302016040518060800160405290816000820180546101d890610b83565b80601f016020809104026020016040519081016040528092919081815260200182805461020490610b83565b80156102515780601f1061022657610100808354040283529160200191610251565b820191906000526020600020905b81548152906001019060200180831161023457829003601f168201915b505050918352505060018201546020808301919091526002909201546001600160a01b038116604080840191909152600160a01b90910460ff1615156060928301528351928401519084015193909101519199909850919650945092505050565b6102ba61084f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6102e461084f565b6102ee60006108a9565b565b6001818154811061030057600080fd5b906000526020600020906003020160009150905080600001805461032390610b83565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90610b83565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505060018301546002909301549192916001600160a01b0381169150600160a01b900460ff1684565b60408051608081018252848152602081018490526001600160a01b038316918101919091526000606082018190526001805480820182559152815160039091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019081906104369082610c0c565b5060208201516001808301919091556040830151600290920180546060909401511515600160a01b026001600160a81b03199094166001600160a01b0390931692909217929092179055805460009161048e91610ccc565b6001600160a01b0383166000818152600360209081526040808320805460018101825590845282842001859055805188815291820192909252929350909183917f81c4710f8c7baf1ec2618ec1985e71a746c51dcf494786d048f0985eed45d33d910160405180910390a350505050565b6001600160a01b03811660009081526003602090815260409182902080548351818402810184019094528084526060939283018282801561055f57602002820191906000526020600020905b81548152602001906001019080831161054b575b50505050509050919050565b60015484106105b95760405162461bcd60e51b81526020600482015260156024820152742632b0b9b2903237b2b9903737ba1032bc34b9ba1760591b60448201526064015b60405180910390fd5b826001600160a01b0316600185815481106105d6576105d6610b6d565b60009182526020909120600260039092020101546001600160a01b0316146106585760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c79207468652064657369676e617465642074656e616e742063616e207360448201526e34b3b7103a3434b9903632b0b9b29760891b60648201526084016105b0565b6001848154811061066b5761066b610b6d565b906000526020600020906003020160020160149054906101000a900460ff16156106cf5760405162461bcd60e51b81526020600482015260156024820152742632b0b9b29030b63932b0b23c9039b4b3b732b21760591b60448201526064016105b0565b6002546001600160a01b03166107275760405162461bcd60e51b815260206004820152601960248201527f4c656173654e46542061646472657373206e6f74207365742e0000000000000060448201526064016105b0565b600180858154811061073b5761073b610b6d565b60009182526020909120600260039092020181018054921515600160a01b0260ff60a01b199093169290921790915554604051630aa677db60e11b81526001600160a01b039091169063154cefb69061079e908790879087908790600401610cf3565b600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b5050505050505050565b6107de61084f565b6001600160a01b0381166108435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b0565b61084c816108a9565b50565b6000546001600160a01b031633146102ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561090b57600080fd5b5035919050565b6000815180845260005b818110156109385760208185018101518683018201520161091c565b506000602082860101526020601f19601f83011685010191505092915050565b60808152600061096b6080830187610912565b6020830195909552506001600160a01b039290921660408301521515606090910152919050565b80356001600160a01b03811681146109a957600080fd5b919050565b6000602082840312156109c057600080fd5b6109c982610992565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109f757600080fd5b813567ffffffffffffffff80821115610a1257610a126109d0565b604051601f8301601f19908116603f01168101908282118183101715610a3a57610a3a6109d0565b81604052838152866020858801011115610a5357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a8857600080fd5b833567ffffffffffffffff811115610a9f57600080fd5b610aab868287016109e6565b93505060208401359150610ac160408501610992565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015610b0257835183529284019291840191600101610ae6565b50909695505050505050565b60008060008060808587031215610b2457600080fd5b84359350610b3460208601610992565b9250604085013567ffffffffffffffff811115610b5057600080fd5b610b5c878288016109e6565b949793965093946060013593505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610b9757607f821691505b602082108103610bb757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c0757600081815260208120601f850160051c81016020861015610be45750805b601f850160051c820191505b81811015610c0357828155600101610bf0565b5050505b505050565b815167ffffffffffffffff811115610c2657610c266109d0565b610c3a81610c348454610b83565b84610bbd565b602080601f831160018114610c6f5760008415610c575750858301515b600019600386901b1c1916600185901b178555610c03565b600085815260208120601f198616915b82811015610c9e57888601518255948401946001909101908401610c7f565b5085821015610cbc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115610ced57634e487b7160e01b600052601160045260246000fd5b92915050565b8481526001600160a01b038416602082015260a060408201819052600090610d1d90830185610912565b6060830193909352508082036080909101526008815267546f6b656e55524960c01b6020820152604001939250505056fea264697066735822122077327010e65e852e03f8f71bc7ee732d2f92b0f032d05370229523e1cfa83b7464736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012a5780639ee1030c1461013b578063d3ea8ae41461014e578063d5f0cdcf1461016e578063f2fde38b1461018157600080fd5b80632e8331fa146100a35780636afd883d146100cf5780636fc28d68146100e4578063715018a61461010f5780638927a10614610117575b600080fd5b6100b66100b13660046108f9565b610194565b6040516100c69493929190610958565b60405180910390f35b6100e26100dd3660046109ae565b6102b2565b005b6002546100f7906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100e26102dc565b6100b66101253660046108f9565b6102f0565b6000546001600160a01b03166100f7565b6100e2610149366004610a73565b6103c7565b61016161015c3660046109ae565b6104ff565b6040516100c69190610aca565b6100e261017c366004610b0e565b61056b565b6100e261018f3660046109ae565b6107d6565b6060600080600080600186815481106101af576101af610b6d565b90600052602060002090600302016040518060800160405290816000820180546101d890610b83565b80601f016020809104026020016040519081016040528092919081815260200182805461020490610b83565b80156102515780601f1061022657610100808354040283529160200191610251565b820191906000526020600020905b81548152906001019060200180831161023457829003601f168201915b505050918352505060018201546020808301919091526002909201546001600160a01b038116604080840191909152600160a01b90910460ff1615156060928301528351928401519084015193909101519199909850919650945092505050565b6102ba61084f565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6102e461084f565b6102ee60006108a9565b565b6001818154811061030057600080fd5b906000526020600020906003020160009150905080600001805461032390610b83565b80601f016020809104026020016040519081016040528092919081815260200182805461034f90610b83565b801561039c5780601f106103715761010080835404028352916020019161039c565b820191906000526020600020905b81548152906001019060200180831161037f57829003601f168201915b5050505060018301546002909301549192916001600160a01b0381169150600160a01b900460ff1684565b60408051608081018252848152602081018490526001600160a01b038316918101919091526000606082018190526001805480820182559152815160039091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019081906104369082610c0c565b5060208201516001808301919091556040830151600290920180546060909401511515600160a01b026001600160a81b03199094166001600160a01b0390931692909217929092179055805460009161048e91610ccc565b6001600160a01b0383166000818152600360209081526040808320805460018101825590845282842001859055805188815291820192909252929350909183917f81c4710f8c7baf1ec2618ec1985e71a746c51dcf494786d048f0985eed45d33d910160405180910390a350505050565b6001600160a01b03811660009081526003602090815260409182902080548351818402810184019094528084526060939283018282801561055f57602002820191906000526020600020905b81548152602001906001019080831161054b575b50505050509050919050565b60015484106105b95760405162461bcd60e51b81526020600482015260156024820152742632b0b9b2903237b2b9903737ba1032bc34b9ba1760591b60448201526064015b60405180910390fd5b826001600160a01b0316600185815481106105d6576105d6610b6d565b60009182526020909120600260039092020101546001600160a01b0316146106585760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c79207468652064657369676e617465642074656e616e742063616e207360448201526e34b3b7103a3434b9903632b0b9b29760891b60648201526084016105b0565b6001848154811061066b5761066b610b6d565b906000526020600020906003020160020160149054906101000a900460ff16156106cf5760405162461bcd60e51b81526020600482015260156024820152742632b0b9b29030b63932b0b23c9039b4b3b732b21760591b60448201526064016105b0565b6002546001600160a01b03166107275760405162461bcd60e51b815260206004820152601960248201527f4c656173654e46542061646472657373206e6f74207365742e0000000000000060448201526064016105b0565b600180858154811061073b5761073b610b6d565b60009182526020909120600260039092020181018054921515600160a01b0260ff60a01b199093169290921790915554604051630aa677db60e11b81526001600160a01b039091169063154cefb69061079e908790879087908790600401610cf3565b600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b5050505050505050565b6107de61084f565b6001600160a01b0381166108435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b0565b61084c816108a9565b50565b6000546001600160a01b031633146102ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561090b57600080fd5b5035919050565b6000815180845260005b818110156109385760208185018101518683018201520161091c565b506000602082860101526020601f19601f83011685010191505092915050565b60808152600061096b6080830187610912565b6020830195909552506001600160a01b039290921660408301521515606090910152919050565b80356001600160a01b03811681146109a957600080fd5b919050565b6000602082840312156109c057600080fd5b6109c982610992565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126109f757600080fd5b813567ffffffffffffffff80821115610a1257610a126109d0565b604051601f8301601f19908116603f01168101908282118183101715610a3a57610a3a6109d0565b81604052838152866020858801011115610a5357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610a8857600080fd5b833567ffffffffffffffff811115610a9f57600080fd5b610aab868287016109e6565b93505060208401359150610ac160408501610992565b90509250925092565b6020808252825182820181905260009190848201906040850190845b81811015610b0257835183529284019291840191600101610ae6565b50909695505050505050565b60008060008060808587031215610b2457600080fd5b84359350610b3460208601610992565b9250604085013567ffffffffffffffff811115610b5057600080fd5b610b5c878288016109e6565b949793965093946060013593505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610b9757607f821691505b602082108103610bb757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610c0757600081815260208120601f850160051c81016020861015610be45750805b601f850160051c820191505b81811015610c0357828155600101610bf0565b5050505b505050565b815167ffffffffffffffff811115610c2657610c266109d0565b610c3a81610c348454610b83565b84610bbd565b602080601f831160018114610c6f5760008415610c575750858301515b600019600386901b1c1916600185901b178555610c03565b600085815260208120601f198616915b82811015610c9e57888601518255948401946001909101908401610c7f565b5085821015610cbc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115610ced57634e487b7160e01b600052601160045260246000fd5b92915050565b8481526001600160a01b038416602082015260a060408201819052600090610d1d90830185610912565b6060830193909352508082036080909101526008815267546f6b656e55524960c01b6020820152604001939250505056fea264697066735822122077327010e65e852e03f8f71bc7ee732d2f92b0f032d05370229523e1cfa83b7464736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/LeaseAgreement.sol:LeaseAgreement",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3073,
        "contract": "contracts/LeaseAgreement.sol:LeaseAgreement",
        "label": "leases",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Lease)3069_storage)dyn_storage"
      },
      {
        "astId": 3075,
        "contract": "contracts/LeaseAgreement.sol:LeaseAgreement",
        "label": "leaseNftAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3190,
        "contract": "contracts/LeaseAgreement.sol:LeaseAgreement",
        "label": "tenantLeases",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Lease)3069_storage)dyn_storage": {
        "base": "t_struct(Lease)3069_storage",
        "encoding": "dynamic_array",
        "label": "struct LeaseAgreement.Lease[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Lease)3069_storage": {
        "encoding": "inplace",
        "label": "struct LeaseAgreement.Lease",
        "members": [
          {
            "astId": 3062,
            "contract": "contracts/LeaseAgreement.sol:LeaseAgreement",
            "label": "propertyAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3064,
            "contract": "contracts/LeaseAgreement.sol:LeaseAgreement",
            "label": "leaseLength",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3066,
            "contract": "contracts/LeaseAgreement.sol:LeaseAgreement",
            "label": "tenantAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 3068,
            "contract": "contracts/LeaseAgreement.sol:LeaseAgreement",
            "label": "signed",
            "offset": 20,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}